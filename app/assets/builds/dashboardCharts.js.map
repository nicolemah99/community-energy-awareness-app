{
  "version": 3,
  "sources": ["../../javascript/dashboardCharts.js"],
  "sourcesContent": ["let windKwh;\nlet solarKwh;\nlet dieselKwh;\n\n/**\n * Fetch data from /dashboard_data.json, update global variables and return a promise\n */\n\nfunction getChartData() {\n\treturn fetch(\"/dashboard_data.json\")\n\t\t.then((response) => {\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t}\n\t\t\treturn response.json();\n\t\t})\n\t\t.then((json) => {\n\t\t\twindKwh = json.wind_kwh;\n\t\t\tsolarKwh = json.solar_kwh;\n\t\t\tdieselKwh = json.diesel_kwh;\n\t\t\treturn { success: true };\n\t\t})\n\t\t.catch((e) => {\n\t\t\tconsole.log(\"There was a problem with the fetch operation: \" + e.message);\n\t\t\treturn { success: false, error: e.message };\n\t\t});\n}\n\n  \n  \n/**\n * Draw doughnut chart using fetched data after checking whether elements exist\n */\nfunction drawDoughnutChart() {\n\tconst elecGenMainChart = document.getElementById(\"elecGenMainChart\");\n\tconst elecGenOverviewChart = document.getElementById(\"elecGenOverviewChart\");\n\n\tconst generationData = {\n\t\tlabels: [\"Solar\", \"Wind\", \"Diesel\"],\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tborderWidth: 0.25,\n\t\t\t\tlabel: \"kWh\",\n\t\t\t\tdata: [solarKwh, windKwh, dieselKwh],\n\t\t\t\tbackgroundColor: [\"#FDDA0D\", \"#0096FF\", \"#8B8000\"],\n\t\t\t\thoverOffset: 4,\n\t\t\t},\n\t\t],\n\t};\n\n\tconst configElecGen = {\n\t\ttype: \"doughnut\",\n\t\tdata: generationData,\n\t\toptions: {\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tbottom: 20,\n\t\t\t\t},\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: true,\n\t\t},\n\t};\n\n\t// If charts already exist, destroy them to prevent multiple instances\n\tif (window.genChartMainObj) window.genChartMainObj.destroy();\n\tif (window.genChartOverviewObj) window.genChartOverviewObj.destroy();\n\n\t// Draw new charts\n\twindow.genChartMainObj = new Chart(elecGenMainChart, configElecGen);\n\twindow.genChartOverviewObj = new Chart(elecGenOverviewChart, configElecGen);\n}\n\n/**\n * Load chart data and then draw the chart\n */\nfunction loadCharts() {\n\tgetChartData().then((result) => {\n\t\tif (result.success) {\n\t\t\tdrawDoughnutChart();\n\t\t} else {\n\t\t\tconsole.log(\"Failed to fetch data:\", result.error);\n\t\t}\n\t});\n}\n\n// Listen for Turbo's page load event, then load the charts\ndocument.addEventListener(\"turbo:load\", (event) => {\n\tconst rootPath = \"/\";\n\tconst url = new URL(event.detail.url);\n\n\t//If user clicked on root link\n\tif (url.pathname == rootPath) {\n\t\tconst elecGenMainChart = document.getElementById(\"elecGenMainChart\");\n\t\tconst elecGenOverviewChart = document.getElementById(\n\t\t\t\"elecGenOverviewChart\"\n\t\t);\n\t\tif (elecGenMainChart && elecGenOverviewChart) {\n\t\t\tloadCharts();\n\t\t\t//setUpDatePickers();\n      \t\t//setUpEventListeners();\n\t\t}\n\t}\n});\n\n// Create a debounce function for the window resize event\nwindow.addEventListener(\"resize\", () => {\n\tdrawDoughnutChart();\n})"],
  "mappings": ";;AAAA,MAAI;AACJ,MAAI;AACJ,MAAI;AAMJ,WAAS,eAAe;AACvB,WAAO,MAAM,sBAAsB,EACjC,KAAK,CAAC,aAAa;AACnB,UAAI,CAAC,SAAS,IAAI;AACjB,cAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,EAAE;AAAA,MACzD;AACA,aAAO,SAAS,KAAK;AAAA,IACtB,CAAC,EACA,KAAK,CAAC,SAAS;AACf,gBAAU,KAAK;AACf,iBAAW,KAAK;AAChB,kBAAY,KAAK;AACjB,aAAO,EAAE,SAAS,KAAK;AAAA,IACxB,CAAC,EACA,MAAM,CAAC,MAAM;AACb,cAAQ,IAAI,mDAAmD,EAAE,OAAO;AACxE,aAAO,EAAE,SAAS,OAAO,OAAO,EAAE,QAAQ;AAAA,IAC3C,CAAC;AAAA,EACH;AAOA,WAAS,oBAAoB;AAC5B,UAAM,mBAAmB,SAAS,eAAe,kBAAkB;AACnE,UAAM,uBAAuB,SAAS,eAAe,sBAAsB;AAE3E,UAAM,iBAAiB;AAAA,MACtB,QAAQ,CAAC,SAAS,QAAQ,QAAQ;AAAA,MAClC,UAAU;AAAA,QACT;AAAA,UACC,aAAa;AAAA,UACb,OAAO;AAAA,UACP,MAAM,CAAC,UAAU,SAAS,SAAS;AAAA,UACnC,iBAAiB,CAAC,WAAW,WAAW,SAAS;AAAA,UACjD,aAAa;AAAA,QACd;AAAA,MACD;AAAA,IACD;AAEA,UAAM,gBAAgB;AAAA,MACrB,MAAM;AAAA,MACN,MAAM;AAAA,MACN,SAAS;AAAA,QACR,QAAQ;AAAA,UACP,SAAS;AAAA,YACR,QAAQ;AAAA,UACT;AAAA,QACD;AAAA,QACA,YAAY;AAAA,QACZ,qBAAqB;AAAA,MACtB;AAAA,IACD;AAGA,QAAI,OAAO;AAAiB,aAAO,gBAAgB,QAAQ;AAC3D,QAAI,OAAO;AAAqB,aAAO,oBAAoB,QAAQ;AAGnE,WAAO,kBAAkB,IAAI,MAAM,kBAAkB,aAAa;AAClE,WAAO,sBAAsB,IAAI,MAAM,sBAAsB,aAAa;AAAA,EAC3E;AAKA,WAAS,aAAa;AACrB,iBAAa,EAAE,KAAK,CAAC,WAAW;AAC/B,UAAI,OAAO,SAAS;AACnB,0BAAkB;AAAA,MACnB,OAAO;AACN,gBAAQ,IAAI,yBAAyB,OAAO,KAAK;AAAA,MAClD;AAAA,IACD,CAAC;AAAA,EACF;AAGA,WAAS,iBAAiB,cAAc,CAAC,UAAU;AAClD,UAAM,WAAW;AACjB,UAAM,MAAM,IAAI,IAAI,MAAM,OAAO,GAAG;AAGpC,QAAI,IAAI,YAAY,UAAU;AAC7B,YAAM,mBAAmB,SAAS,eAAe,kBAAkB;AACnE,YAAM,uBAAuB,SAAS;AAAA,QACrC;AAAA,MACD;AACA,UAAI,oBAAoB,sBAAsB;AAC7C,mBAAW;AAAA,MAGZ;AAAA,IACD;AAAA,EACD,CAAC;AAGD,SAAO,iBAAiB,UAAU,MAAM;AACvC,sBAAkB;AAAA,EACnB,CAAC;",
  "names": []
}
